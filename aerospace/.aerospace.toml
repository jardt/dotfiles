after-startup-command = ['exec-and-forget sketchybar','exec-and-forget borders']

# Notify Sketchybar about workspace change
exec-on-workspace-change = [
   '/bin/bash',
    '-c',
    'sketchybar --trigger aerospace_workspace_change FOCUSED_WORKSPACE=$AEROSPACE_FOCUSED_WORKSPACE',
]

# Start AeroSpace at login
start-at-login = true

# Normalizations. See: https://nikitabobko.github.io/AeroSpace/guide#normalization
enable-normalization-flatten-containers = true
enable-normalization-opposite-orientation-for-nested-containers = true

# See: https://nikitabobko.github.io/AeroSpace/guide#layouts
# The 'accordion-padding' specifies the size of accordion padding
# You can set 0 to disable the padding feature
accordion-padding = 300

# Possible values: tiles|accordion
default-root-container-layout = 'tiles'

# Possible values: horizontal|vertical|auto
# 'auto' means: wide monitor (anything wider than high) gets horizontal orientation,
#               tall monitor (anything higher than wide) gets vertical orientation
default-root-container-orientation = 'auto'

# Mouse follows focus when focused monitor changes
# Drop it from your config, if you don't like this behavior
# See https://nikitabobko.github.io/AeroSpace/guide#on-focus-changed-callbacks
# See https://nikitabobko.github.io/AeroSpace/commands#move-mouse
# Fallback value (if you omit the key): on-focused-monitor-changed = []
on-focused-monitor-changed = ['move-mouse monitor-lazy-center']

# You can effectively turn off macOS "Hide application" (cmd-h) feature by toggling this flag
# Useful if you don't use this macOS feature, but accidentally hit cmd-h or cmd-cmd-h key
# Also see: https://nikitabobko.github.io/AeroSpace/goodness#disable-hide-app
automatically-unhide-macos-hidden-apps = true

# [[on-window-detected]]
# if.app-id = 'com.apple.systempreferences'
# if.app-name-regex-substring = 'settings'
# if.window-title-regex-substring = 'substring'
# if.workspace = 'workspace-name'
# if.during-aerospace-startup = true
# check-further-callbacks = true
# run = ['layout floating', 'move-node-to-workspace S']  


[[on-window-detected]]
if.app-name-regex-substring = 'camera'
run = 'layout floating'

[[on-window-detected]]
if.app-name-regex-substring = 'quicktime'
run = 'layout floating'

# Possible values: (qwerty|dvorak)
# See https://nikitabobko.github.io/AeroSpace/guide#key-mapping
[key-mapping]
preset = 'qwerty'

# Gaps between windows (inner-*) and between monitor edges (outer-*).
# Possible values:
# - Constant:     gaps.outer.top = 8
# - Per monitor:  gaps.outer.top = [{ monitor.main = 16 }, { monitor."some-pattern" = 32 }, 24]
#                 In this example, 24 is a default value when there is no match.
#                 Monitor pattern is the same as for 'workspace-to-monitor-force-assignment'.
#                 See: https://nikitabobko.github.io/AeroSpace/guide#assign-workspaces-to-monitors
[gaps]
inner.horizontal = 10
inner.vertical = 10
outer.left = 10
outer.bottom = 10
outer.top = 30
outer.right = 10

# 'main' binding mode declaration
# See: https://nikitabobko.github.io/AeroSpace/guide#binding-modes
# 'main' binding mode must be always presented
# Fallback value (if you omit the key): mode.main.binding = {}
[mode.main.binding]

# All possible keys:
# - Letters.        a, b, c, ..., z
# - Numbers.        0, 1, 2, ..., 9
# - Keypad numbers. keypad0, keypad1, keypad2, ..., keypad9
# - F-keys.         f1, f2, ..., f20
# - Special keys.   minus, equal, period, comma, slash, backslash, quote, semicolon, backtick,
#                   leftSquareBracket, rightSquareBracket, space, enter, esc, backspace, tab
# - Keypad special. keypadClear, keypadDecimalMark, keypadDivide, keypadEnter, keypadEqual,
#                   keypadMinus, keypadMultiply, keypadPlus
# - Arrows.         left, down, up, right

# All possible modifiers: cmd, alt, ctrl, shift

# All possible commands: https://nikitabobko.github.io/AeroSpace/commands

# See: https://nikitabobko.github.io/AeroSpace/commands#exec-and-forget
# You can uncomment the following lines to open up terminal with alt + enter shortcut (like in i3)
# alt-enter = '''exec-and-forget osascript -e '
# tell application "Terminal"
#     do script
#     activate
# end tell'
# '''

ctrl-shift-alt-enter = 'fullscreen --no-outer-gaps'
ctrl-shift-alt-r = 'layout floating tiling'

ctrl-shift-alt-shift-left = 'join-with left'
ctrl-shift-alt-shift-down = 'join-with down'
ctrl-shift-alt-shift-up = 'join-with up'
ctrl-shift-alt-shift-right = 'join-with right'

ctrl-shift-alt-period = 'layout tiles horizontal vertical'
ctrl-shift-alt-comma = 'layout accordion horizontal vertical'

ctrl-shift-alt-h = 'focus left'
ctrl-shift-alt-j = 'focus down'
ctrl-shift-alt-k = 'focus up'
ctrl-shift-alt-l = 'focus right'

ctrl-shift-alt-cmd-h = 'move left'
ctrl-shift-alt-cmd-j = 'move down'
ctrl-shift-alt-cmd-k = 'move up'
ctrl-shift-alt-cmd-l = 'move right'

ctrl-shift-alt-minus = 'resize smart -50'
ctrl-shift-alt-equal = 'resize smart +50'

ctrl-shift-alt-0 = 'workspace 0'
ctrl-shift-alt-1 = 'workspace 1'
ctrl-shift-alt-2 = 'workspace 2'
ctrl-shift-alt-3 = 'workspace 3'
ctrl-shift-alt-4 = 'workspace 4'
ctrl-shift-alt-5 = 'workspace 5'
ctrl-shift-alt-6 = 'workspace 6'
ctrl-shift-alt-7 = 'workspace 7'
ctrl-shift-alt-8 = 'workspace 8'
ctrl-shift-alt-9 = 'workspace 9'

ctrl-shift-alt-cmd-0 = 'move-node-to-workspace 1 --focus-follows-window'
ctrl-shift-alt-cmd-1 = 'move-node-to-workspace 1 --focus-follows-window'
ctrl-shift-alt-cmd-2 = 'move-node-to-workspace 2 --focus-follows-window'
ctrl-shift-alt-cmd-3 = 'move-node-to-workspace 3 --focus-follows-window'
ctrl-shift-alt-cmd-4 = 'move-node-to-workspace 4 --focus-follows-window'
ctrl-shift-alt-cmd-5 = 'move-node-to-workspace 5 --focus-follows-window'
ctrl-shift-alt-cmd-6 = 'move-node-to-workspace 6 --focus-follows-window'
ctrl-shift-alt-cmd-7 = 'move-node-to-workspace 7 --focus-follows-window'
ctrl-shift-alt-cmd-8 = 'move-node-to-workspace 8 --focus-follows-window'
ctrl-shift-alt-cmd-9 = 'move-node-to-workspace 8 --focus-follows-window'

ctrl-shift-alt-a = 'workspace-back-and-forth'
ctrl-shift-alt-tab = 'move-workspace-to-monitor --wrap-around next'

ctrl-shift-alt-semicolon = 'mode service'
ctrl-shift-alt-esc = 'mode apps'

ctrl-shift-alt-b = 'exec-and-forget open -a /Applications/Firefox\ Developer\ Edition.app'
ctrl-shift-alt-f = 'exec-and-forget open -a /Applications/Firefox.app'
ctrl-shift-alt-o = 'exec-and-forget open -a /Applications/Microsoft\ Outlook.app'
ctrl-shift-alt-n = 'exec-and-forget open -a /Applications/Obsidian.app'
ctrl-shift-alt-c = 'exec-and-forget open -a /Applications/Google\ Chrome.app/'
ctrl-shift-alt-space = 'exec-and-forget open -a /Applications/Ghostty.app'
ctrl-shift-alt-s = 'exec-and-forget open -a /Applications/Discord.app -a /Applications/Slack.app'
ctrl-shift-alt-m = 'exec-and-forget open -a /Applications/Spotify.app'
ctrl-shift-alt-t = 'exec-and-forget open -a /Applications/Microsoft\ Teams.app '
ctrl-shift-alt-d = 'exec-and-forget open -a /Applications/Figma.app'
ctrl-shift-alt-v = 'exec-and-forget open -a /Applications/Visual Studio Code.app'
ctrl-shift-alt-i = 'exec-and-forget open -a /Applications/kitty.app'

# 'service' binding mode declaration.
# See: https://nikitabobko.github.io/AeroSpace/guide#binding-modes
[mode.service.binding]
esc = ['reload-config', 'mode main']
r = ['flatten-workspace-tree', 'mode main'] # reset layout
f = [
    'layout floating tiling',
    'mode main',
] # Toggle between floating and tiling layout
backspace = ['close-all-windows-but-current', 'mode main']

[mode.apps.binding]

[[on-window-detected]]
if.app-name-regex-substring = 'Teams'
if.window-title-regex-substring = 'Teams'
run = ['move-node-to-workspace 9']

[[on-window-detected]]
if.app-name-regex-substring = 'Slack'
if.window-title-regex-substring = 'Slack'
run = ['move-node-to-workspace 8']

[[on-window-detected]]
if.app-name-regex-substring = 'discord'
if.window-title-regex-substring = 'discord'
run = ['move-node-to-workspace 8']

[[on-window-detected]]
if.app-name-regex-substring = 'Outlook'
if.window-title-regex-substring = 'Outlook'
run = ['move-node-to-workspace 8']

[[on-window-detected]]
if.app-name-regex-substring = 'Obsidian'
if.window-title-regex-substring = 'Obsidian'
run = ['move-node-to-workspace 6']

[[on-window-detected]]
if.app-name-regex-substring = 'Figma'
if.window-title-regex-substring = 'Figma'
run = ['move-node-to-workspace 7']

[[on-window-detected]]
if.app-name-regex-substring = 'kitty'
if.window-title-regex-substring = 'kitty'
run = ['move-node-to-workspace 0']

[[on-window-detected]]
if.app-name-regex-substring = 'Ghostty'
if.window-title-regex-substring = 'Ghostty'
run = ['move-node-to-workspace 0']

[[on-window-detected]]
if.app-name-regex-substring = 'firefox'
if.window-title-regex-substring = 'firefox'
run = ['move-node-to-workspace 5']

[[on-window-detected]]
if.app-name-regex-substring = 'firefox'
if.window-title-regex-substring = 'firefox'
run = ['move-node-to-workspace 5']

[[on-window-detected]]
if.app-name-regex-substring = 'chrome'
if.window-title-regex-substring = 'chrome'
run = ['move-node-to-workspace 4']

[[on-window-detected]]
if.app-name-regex-substring = 'tradingview'
if.window-title-regex-substring = 'TradingView'
run = ['move-node-to-workspace 9']
